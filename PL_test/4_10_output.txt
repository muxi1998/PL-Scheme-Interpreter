Welcome to OurScheme!

> a defined

> "=============== Problem 10 viewable case ================="

> environment cleaned

> x1 defined

> x2 defined

> x3 defined

> TrickySumUp defined

> 55.500

> "Illegal input! the first argument must be smaller or equal to the second."

> 3.500

> 12

> Abs defined

> Real defined

> Int defined

> Power defined

> FindRange defined

> Find-Range defined

> IntFloor defined

> Int-Floor defined

> ( 8192
  16384
)

> 13579

> 13579

> 13579.000

> ( 1024
  1024
)

> 1024

> -13579

> environment cleaned

> x1 defined

> x2 defined

> x3 defined

> TrickySumUp defined

> 55.500

> ERROR (unbound symbol) : Transform

> 60.500

> ERROR (+ with incorrect argument type) : "Illegal input! the first argument must be smaller or equal to the second."

> "Illegal input! the first argument must be smaller or equal to the second."

> 3.500

> 12

> Abs defined

> Real defined

> Int defined

> Power defined

> FindRange defined

> Find-Range defined

> IntFloor defined

> Int-Floor defined

> Transform defined

> ( 8192
  16384
)

> 13579

> 13579

> 13579.000

> ( 1024
  1024
)

> 1024

> -13579

> ERROR (no return value) : ( Transform
  3
  5
  2
)

> ERROR (no return value) : ( Transform
  below
  above
  below
)

> ERROR (no return value) : ( Transform
  3
  31258.790
  2
)

> ERROR (no return value) : ( Transform
  below
  above
  below
)

> GuaiPower defined

> ERROR (no return value) : ( GuaiPower
  2
  12
)

> 144

> Find-Range defined

> ERROR (no return value) : ( GuaiPower
  2
  ( +
    startWith
    1
  )
)

> 234

> ERROR (no return value) : ( GuaiPower
  2
  ( +
    startWith
    1
  )
)

> ERROR (no return value) : ( GuaiPower
  2
  ( +
    startWith
    1
  )
)

> GuaiInt defined

> ERROR (no return value) : ( GuaiPower
  2
  ( +
    startWith
    1
  )
)

> ERROR (no return value) : ( GuaiInt
  23.560
)

> ERROR (no return value) : ( GuaiPower
  2
  ( +
    startWith
    1
  )
)

> ERROR (unbound parameter) : ( GuaiInt
  23.560
)

> 123

> ERROR (no return value) : ( GuaiPower
  2
  ( +
    startWith
    1
  )
)

> a defined

> "=============== Problem 9 viewable case ================="

> environment cleaned

> cadr defined

> caddr defined

> caar defined

> caadr defined

> caaddr defined

> % defined

> $%%% defined

> KeyPair defined

> RealKey defined

> ListAppend defined

> $ListAppend defined

> ListLength defined

> $ListLength defined

> NthElementOf defined

> $NthElementOf defined

> WithNthElementOfListReplaced defined

> $WithNthElementOfListReplaced defined

> DivisibleBy defined

> PrintListOfStringsAsSentence defined

> PrintListOfSymbolsAsSentence defined

> PrintListOfSymbolsStringsAsSentence defined

> PrintListOfSymbolsNumbersStringsAsSentence defined

> @size@ defined

> @price@ defined

> @quality@ defined

> ResetTransactionState defined

> ProductIndex defined

> TransactionState defined

> Top? defined

> Bottom? defined

> TopPrice? defined

> BottomPrice? defined

> TopSize? defined

> BottomSize? defined

> TopQuality? defined

> BottomQuality? defined

> Downgrade defined

> Upgrade defined

> DowngradeSize defined

> DowngradePrice defined

> DowngradeQuality defined

> UpgradeSize defined

> UpgradePrice defined

> UpgradeQuality defined

> Abs defined

> PriceTag defined

> ExampleExpertise defined

> $expertise-DB defined

> RuleSetOf defined

> $RuleSetOfFrom defined

> WithNthRuleReplaced defined

> Rule defined

> DefineExpertise defined

> $AddToExpertiseDB defined

> $IndexOfExpertiseEntry defined

> ruleList-01 defined

> Expertise-01 defined
The expertise 'Expertise-01' has been established.
#t

> rule-139 defined

> Expertise-02 defined
The expertise 'Expertise-02' has been established.
#t

> Expertise-03 defined
The expertise 'Expertise-03' has been established.
#t

> ListExpertiseNames defined

> $ListExpertiseNames defined

> GetNotYetUsedKeyFromUser defined

> DoDefineCondition defined

> DoDefineAction defined

> GetNotYetUsedExpertiseNameFromUser defined

> NameUsedInExpertiseDB? defined

> $NameUsedInExpertiseDB? defined

> DoDefineExpertiseFromDB defined

> DoReplaceRuleOfExpertiseWithNewlyComposedRuleUsingDB defined

> GetRuleSetFromDB defined

> GetConditionFromDB defined

> GetActionListFromDB defined

> DoSearchCondition defined

> DoSearchAction defined

> DoUpdateCondition defined

> DoUpdateAction defined

> DoRemoveCondition defined

> DoRemoveAction defined

> DoListConditions defined

> DoListActions defined

> DoListConditionKeys defined

> DoListActionKeys defined

> ExpertSystemShell defined

> DoDefineNewExpertise defined

> DoRemoveExpertise defined

> $WithExpertiseRemoved defined

> ListRuleSet defined

> DoReplaceRuleSet defined

> $ReplaceRuleSet defined

> DoReplaceRuleOfRuleSet defined

> $ReplaceRuleOfRuleSet defined

> nil

> ListConditionBST defined

> ListActionBST defined

> ClearConditionDB defined

> ClearActionDB defined

> ListConditionDB defined

> ListActionDB defined

> ListDB-BST defined

> $ListDB-BST defined

> KeyUsedInConditionDB? defined

> KeyUsedInActionDB? defined

> KeyUsedInBST? defined

> $KeyUsedInBST? defined

> ListKeysOfConditionDB defined

> ListKeysOfActionDB defined

> ListKeysOfBST defined

> $ListKeysOfBST defined

> SearchConditionDB defined

> SearchActionDB defined

> SearchBST defined

> $SearchBST defined

> AddToConditionDB defined

> AddToActionDB defined

> AddToBST defined

> $AddToBST defined

> UpdateConditionDB defined

> UpdateActionDB defined

> UpdateBST defined

> $UpdateBST defined

> FindMaxBSTnode defined

> $FindMaxBSTnode defined

> FindMinBSTnode defined

> $FindMinBSTnode defined

> RemoveFromConditionDB defined

> RemoveFromActionDB defined

> RemoveFromBST defined

> $RemoveFromBST defined

> ( DivisibleBy
  n
  7652145
)

> "Key (short-version long-version) : ( 189  568 )"

> "Key (short-version long-version) : ( 94  473 )"

> "Key (short-version long-version) : ( 282  661 )"

> nil

> 20

> 30

> ( ( set!
    a
    ( +
      n
      a
    )
  )
  ( set!
    b
    ( +
      n
      a
      b
    )
  )
)

> "Key (short-version long-version) : ( 189  568 )"

> "Key (short-version long-version) : ( 94  473 )"

> "Key (short-version long-version) : ( 282  661 )"

> nil

> ? > ( 94  473 )
( 189  568 )
( 282  661 )
? > Sorry! The choice you give is not in the list of choices.
? > ( 94  473 )
( 189  568 )
( 282  661 )
? > Key of the condition to be searched for > ( DivisibleBy
  n
  7652145
)
? > Key of the condition to be searched for > ERROR (create-error-object with incorrect argument type) : ( string-append
  "$SearchBST error : the given key "
  ( number->string
    key
  )
  " is not on the BST."
)

> 16

> 238

> 16

> 473

> 17

> 18

> 3

> 4

> ERROR (unbound symbol) : NoSuchExpertise

> 4

> #<procedure ExampleExpertise>

> 4

> #<procedure Expertise-01>

> ERROR (unbound symbol) : quit

> ERROR (unbound symbol) : ExpertSYSTEMShell

> "quality : 3 size : 2 price : 3 ProductIndex : 5"

> "quality : 3 size : 3 price : 3 ProductIndex : 6"

> "quality : 3 size : 3 price : 4 ProductIndex : 7"

> ERROR (create-error-object with incorrect argument type) : ( string-append
  "% : "
  ( number->string
    original
  )
  " is not an integer."
)

> ERROR (unbound symbol) : Expertise-08

> "quality : 3 size : 1 price : 3 ProductIndex : 4"

> ? > Key (at least 5 digits) associated with the to-be-defined-item > The condition to be added to the DB > Key (short-version long-version) : ( 3  3518792 )
? > Key (at least 5 digits) associated with the to-be-defined-item > The condition to be added to the DB > Key (short-version long-version) : ( 5  5478952 )
? > Key (at least 5 digits) associated with the to-be-defined-item > The condition to be added to the DB > Key (short-version long-version) : ( 9  9157342 )
? > Key (at least 5 digits) associated with the to-be-defined-item > The condition to be added to the DB > Key (short-version long-version) : ( 1  1749826 )
? > Key (at least 5 digits) associated with the to-be-defined-item > The condition to be added to the DB > Key (short-version long-version) : ( 4  4865217 )
? > ( 1  1749826 )
( 3  3518792 )
( 4  4865217 )
( 5  5478952 )
( 9  9157342 )
( 94  473 )
( 189  568 )
( 282  661 )
? > Name of the to-be-defined-expertise > Define a new rule from Condition/Action-list in DB? (Y/N) > Key of the condition > Key of the action-list > Define a new rule from Condition/Action-list in DB? (Y/N) > Key of the condition > Key of the action-list > Define a new rule from Condition/Action-list in DB? (Y/N) > Key of the condition > Key of the action-list > Define a new rule from Condition/Action-list in DB? (Y/N) > Key of the condition > Key of the action-list > Define a new rule from Condition/Action-list in DB? (Y/N) > TryTrySee defined
The expertise 'TryTrySee' has been established.
? > Bye!

> 20

> 30

> ERROR (unbound condition) : ( if
  ( =
    ( %
      n
      2
    )
    1
  )
  #t
)

> 20

> 30

> ERROR (unbound condition) : ( if
  ( =
    ( %
      n
      2
    )
    1
  )
  #t
)

> 20

> 30

> 351024

> 175507

> 351024

> 877507

> 350995

> 877507

> 1

> 426482

> 1

> 577459

> 501970

> 577459

> ERROR (unbound symbol) : ==

> 501970

> 577459

> ERROR (unbound symbol) : ==

> 501970

> 577459

> ? > TryTrySee
Expertise-03
Expertise-02
Expertise-01
ExampleExpertise
? > Please give the name of the expertise > ( ( ( and
      ( >=
        n
        200000
      )
      ( if
        ( =
          ( %
            n
            2
          )
          1
        )
        #t
      )
    )
    ( set!
      a
      ( +
        n
        a
      )
    )
    ( set!
      b
      ( +
        n
        a
        b
      )
    )
  )
  ( ( >=
      n
      100000
    )
    ( set!
      a
      ( +
        n
        a
      )
    )
    ( set!
      b
      ( +
        n
        a
        b
      )
    )
  )
  ( ( or
      ( >=
        n
        50000
      )
      ( ==
        ( %
          n
          5
        )
        0
      )
    )
    ( set!
      a
      ( +
        n
        a
      )
    )
    ( set!
      b
      ( +
        n
        a
        b
      )
    )
  )
  ( else
    ( set!
      a
      ( +
        n
        a
      )
    )
    ( set!
      b
      ( +
        n
        a
        b
      )
    )
  )
)
? > Key (at least 5 digits) associated with the to-be-defined-item > The action-list to be added to the DB > Key (short-version long-version) : ( 4  49256587 )
? > Key (at least 5 digits) associated with the to-be-defined-item > The action-list to be added to the DB > Key (short-version long-version) : ( 245  398574 )
? > Key (at least 5 digits) associated with the to-be-defined-item > The action-list to be added to the DB > Key (short-version long-version) : ( 1  1124365 )
? > Key (at least 5 digits) associated with the to-be-defined-item > The action-list to be added to the DB > Key (short-version long-version) : ( 9  9258674 )
? > Key (at least 5 digits) associated with the to-be-defined-item > Sorry, this key is already in use. Please specify another one.
Key (at least 5 digits) associated with the to-be-defined-item > ERROR (< with incorrect argument type) : ( ( let
    ( ( %p
        ( PriceTag
          n
        )
      )
    )
    ( set!
      a
      ( +
        b
        ( if
          ( =
            ( %
              n
              5
            )
            0
          )
          ( +
            n
            5
          )
        )
      )
    )
    ( cond
      ( ( and
          ( <=
            500000
            %p
          )
          ( <=
            %p
            800000
          )
        )
        #t
      )
      ( ( <
          %p
          500000
        )
        ( cond
          ( ( not
              ( TopSize?
              )
            )
            ( UpgradeSize
            )
          )
          ( ( not
              ( TopPrice?
              )
            )
            ( UpgradePrice
            )
          )
          ( ( not
              ( TopQuality?
              )
            )
            ( UpgradeQuality
            )
          )
        )
      )
      ( ( <
          800000
          %p
        )
        ( cond
          ( ( not
              ( BottomSize?
              )
            )
            ( DowngradeSize
            )
          )
          ( ( not
              ( BottomPrice?
              )
            )
            ( DowngradePrice
            )
          )
          ( ( not
              ( BottomQuality?
              )
            )
            ( DowngradeQuality
            )
          )
        )
      )
    )
    ( TransactionState
    )
  )
)

> 8

> 8416872

> ERROR (unbound symbol) : n

> 8

> 65623565

> 5545587

> ERROR (unbound symbol) : n

> 8

> 2653485

> ERROR (unbound symbol) : n

> 14

> 19

> ERROR (unbound symbol) : OverSpent

> ERROR (unbound symbol) : y

> 156

> 231

> ERROR (unbound symbol) : y

> 128

> 245

> ERROR (unbound symbol) : y

> 323

> 251

> ERROR (unbound symbol) : y

> 362

> 83

> ERROR (unbound symbol) : n

> 19

> ERROR (unbound symbol) : Exaggerated

> ERROR (unbound symbol) : y

> 373

> 157

> ERROR (unbound symbol) : y

> 156

> 40

> ERROR (unbound symbol) : y

> 128

> 59

> ERROR (unbound symbol) : y

> 362

> 106

> ERROR (unbound symbol) : n

> ERROR (unbound symbol) : quit

> #t

> ERROR (unbound symbol) : OverSpent

> ERROR (unbound symbol) : OverSpent

> ERROR (unbound symbol) : OverSpent

> ERROR (unbound symbol) : OverSpent

> ERROR (unbound symbol) : OverSpent

> ERROR (unbound symbol) : OverSpent

> ERROR (unbound symbol) : OverSpent

> ERROR (unbound symbol) : OverSpent

> ERROR (unbound symbol) : OverSpent

> ERROR (unbound symbol) : OverSpent

> ERROR (unbound symbol) : Exaggerated

> ERROR (unbound symbol) : Exaggerated

> ERROR (unbound symbol) : Exaggerated

> ERROR (unbound symbol) : Exaggerated

> ERROR (unbound symbol) : Exaggerated

> ERROR (unbound symbol) : Exaggerated

> ERROR (unbound symbol) : Exaggerated

> ERROR (unbound symbol) : Exaggerated

> ERROR (unbound symbol) : Exaggerated

> ERROR (unbound symbol) : Exaggerated

> ERROR (unbound symbol) : Exaggerated

> ERROR (unbound symbol) : Exaggerated

> ? > Key of the condition to remove > ERROR (create-error-object with incorrect argument type) : ( string-append
  "$RemoveFromBST error : the given key "
  ( number->string
    %key
  )
  " does not exist on the BST."
)

> 11

> 189

> 13

> 12

> 231

> 12

> 251

> 12

> 40

> 14

> 15

> 9157342

> 15

> 5478952

> 16

> 78945

> 16

> 1124365

> 16

> 4545125

> 15

> 2549865

> 16

> 4544887

> ERROR (unbound symbol) : quit

> #t

> ERROR (unbound symbol) : OverSpent

> ERROR (unbound symbol) : OverSpent

> ERROR (unbound symbol) : OverSpent

> ERROR (unbound symbol) : OverSpent

> ERROR (unbound symbol) : OverSpent

> ERROR (unbound symbol) : OverSpent

> ERROR (unbound symbol) : OverSpent

> ERROR (unbound symbol) : OverSpent

> ERROR (unbound symbol) : OverSpent

> ERROR (unbound symbol) : OverSpent

> ERROR (unbound symbol) : OverSpent

> ERROR (unbound symbol) : OverSpent

> ERROR (unbound symbol) : Exaggerated

> ERROR (unbound symbol) : Exaggerated

> ERROR (unbound symbol) : Exaggerated

> ERROR (unbound symbol) : Exaggerated

> ERROR (unbound symbol) : Exaggerated

> ERROR (unbound symbol) : Exaggerated

> ERROR (unbound symbol) : Exaggerated

> ERROR (unbound symbol) : Exaggerated

> ERROR (unbound symbol) : Exaggerated

> ERROR (unbound symbol) : Exaggerated

> ERROR (unbound symbol) : Exaggerated

> ERROR (unbound symbol) : Exaggerated

> ++ defined

> ? > Key (at least 5 digits) associated with the to-be-defined-item > Sorry, this key is already in use. Please specify another one.
Key (at least 5 digits) associated with the to-be-defined-item > ERROR (< with incorrect argument type) : ( >=
  n
  50000
)

> 8

> 7457747

> ERROR (unbound symbol) : n

> 20

> ERROR (unbound symbol) : OverSpent

> 4

> 362

> 164

> 20

> ERROR (unbound symbol) : OverSpent

> 3

> 1547254

> 251

> ERROR (unbound symbol) : quit

> #t

> ERROR (unbound symbol) : OverSpent

> ERROR (unbound symbol) : OverSpent

> ERROR (unbound symbol) : OverSpent

> ERROR (unbound symbol) : OverSpent

> ERROR (unbound symbol) : OverSpent

> ERROR (unbound symbol) : OverSpent

> ERROR (unbound symbol) : OverSpent

> ERROR (unbound symbol) : OverSpent

> ERROR (unbound symbol) : OverSpent

> ERROR (unbound symbol) : OverSpent

> ERROR (unbound symbol) : OverSpent

> ERROR (unbound symbol) : OverSpent

> ERROR (unbound symbol) : Exaggerated

> ERROR (unbound symbol) : Exaggerated

> ERROR (unbound symbol) : Exaggerated

> ERROR (unbound symbol) : Exaggerated

> ERROR (unbound symbol) : Exaggerated

> ERROR (unbound symbol) : Exaggerated

> ERROR (unbound symbol) : Exaggerated

> ERROR (unbound symbol) : Exaggerated

> ERROR (unbound symbol) : Exaggerated

> ERROR (unbound symbol) : Exaggerated

> ERROR (unbound symbol) : Exaggerated

> ERROR (unbound symbol) : Exaggerated

> ERROR (no closing quote) : END-OF-LINE encountered at Line 2 Column 13

> ERROR (no closing quote) : END-OF-LINE encountered at Line 1 Column 2

> ERROR (no more input) : END-OF-FILE encountered
Thanks for using OurScheme!